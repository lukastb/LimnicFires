par(mar=c(5,8,2,1)) # sets the bottom, left, top and right margins
vioplot(suva_tall_c$value ~ suva_tall_c$time, pchMed=19, col=rep(c("gray80"), 6), ylim=c(min(suva_tall$value),max(suva_tall$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Control", side=2, line=4, cex=2)
mtext(side=2, at=max(suva_tall$value)*1.01, "(a)", cex=2, las=1, adj=3)
# 2nd plot
par(mar=c(6,8,2,1)) # sets the bottom, left, top and right margins
vioplot(suva_tall_t$value ~ suva_tall_t$time, pchMed=19, col=rep(c("gray20"), 6), at=c(1:6), ylim=c(min(suva_tall$value),max(suva_tall$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Treatment", side=2, line=4, cex=2)
mtext(side=2, at=max(suva_tall$value)*1.01, "(b)", cex=2, las=1, adj=3)
mtext("Time (h)", side=1, line=4, cex=2)
# 3rd plot
par(mar=c(5,8,3,1))
plot(1:2, plotting$median, xlim=c(0,3), ylim=c(3.2,max(plotting$upper)), xaxt='n', yaxt='n', xlab='', bty='n', ylab="", pch=c(21,21), bg=c("grey80", "grey20"), cex=2)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('', ''), cex=2, cex.lab=2, cex.axis=2)
axis(2, line=-5, cex=2, cex.lab=2, cex.axis=2)
mtext("SUVA 254", side=2, line=1, cex=2)
mtext(c("Control", "Treatment"), at=c(1,2), side=1, line=2.5, cex=2)
mtext(side=2, at=max(plotting$upper)*1.001, "(c)", cex=2, las=1, adj=1)
x11(width = 15, height = 10)
# create layout for 3 plots in one window
layout(matrix(c(1,3,2,3), nrow = 2, ncol = 2, byrow = TRUE))
# make singel df's for contr and treat -> makes plotting with vioplot easier
suva_tall_c <- suva_tall[1:28,]
suva_tall_t <- suva_tall[29:56,]
# 1st plot
par(mar=c(5,8,2,1)) # sets the bottom, left, top and right margins
vioplot(suva_tall_c$value ~ suva_tall_c$time, pchMed=19, col=rep(c("gray80"), 6), ylim=c(min(suva_tall$value),max(suva_tall$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Control", side=2, line=4, cex=2)
mtext(side=2, at=max(suva_tall$value)*1.01, "(a)", cex=2, las=1, adj=3)
# 2nd plot
par(mar=c(6,8,2,1)) # sets the bottom, left, top and right margins
vioplot(suva_tall_t$value ~ suva_tall_t$time, pchMed=19, col=rep(c("gray20"), 6), at=c(1:6), ylim=c(min(suva_tall$value),max(suva_tall$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Treatment", side=2, line=4, cex=2)
mtext(side=2, at=max(suva_tall$value)*1.01, "(b)", cex=2, las=1, adj=3)
mtext("Time (h)", side=1, line=4, cex=2)
# 3rd plot
par(mar=c(5,8,3,1))
plot(1:2, plotting$median, xlim=c(0,3), ylim=c(3.2,max(plotting$upper)), xaxt='n', yaxt='n', xlab='', bty='n', ylab="", pch=c(21,21), bg=c("grey80", "grey20"), cex=2)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('', ''), cex=2, cex.lab=2, cex.axis=2)
axis(2, line=-5, cex=2, cex.lab=2, cex.axis=2)
mtext("SUVA 254", side=2, line=1, cex=2)
mtext(c("Control", "Treatment"), at=c(1,2), side=1, line=2.5, cex=2)
mtext(side=2, at=max(plotting$upper)*1.001, "(c)", cex=2, las=1, adj=1)
library(data.table)
library(tidyr)
library(rstan)
library(bayesplot)
library(vioplot)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
setwd("C:/Users/thuile/PhD/GitHub/LimnicFires")
#####fit parafac comps#####
# organize data
data <- read.table("C:/Users/thuile/PhD/LimnicFires/DOM/pf_4comp_56samples.txt", header=T)
# create treat, flume and time col
info <- as.vector(data[,1])
comps <- data[,2:5]
treat <- substr(info, start=0,stop=1)
flume <- substr(info, start=3,stop=3)
flume <- paste(flume, treat, sep = "_") # flume names should be unique
time <- substr(info, start=4,stop=4)
info2 <- cbind(treat,flume,time)
data1<-cbind.data.frame(info2,comps)
colnames(data1)[4:7]<-c("comp1","comp2","comp3","comp4")
rownames(data1) <- NULL
# scale data for better performance of model
comp1_tall <- melt(data1, id.vars = c("treat", "flume", "time"), measure.vars = "comp1")
comp1_scaled <- scale(comp1_tall$value, scale=T, center=T)
comp1_tall$value <- comp1_scaled
comp2_tall <- melt(data1, id.vars = c("treat", "flume", "time"), measure.vars = "comp2")
comp2_scaled <- scale(comp2_tall$value, scale=T, center=T)
comp2_tall$value <- comp2_scaled
# make data wide
# comp1_wide = dcast(data1, treat + flume ~ time, value.var="comp1")
# comp2_wide = dcast(data1, treat + flume ~ time, value.var="comp2")
comp1_wide = dcast(comp1_tall, treat + flume ~ time, value.var="value") #only to see if scaled data does better in the model
comp2_wide = dcast(comp2_tall, treat + flume ~ time, value.var="value") #only to see if scaled data does better in the model
# NAs in the data -> remove rows with NAs and plot before and after removing to see if data differs...
comp1_wide_red <- comp1_wide[-c(which(comp1_wide$`1` %in% NA), which(comp1_wide$`8` %in% NA)),]
comp2_wide_red <- comp2_wide[-c(which(comp1_wide$`1` %in% NA), which(comp1_wide$`8` %in% NA)),]
# create stan data
stan_dat_comp1 = list(
n_flumes = nrow(comp1_wide_red),
n_time = ncol(comp1_wide_red) - 2,
times = as.integer(colnames(comp1_wide_red)[-c(1,2)]),
treatment = ifelse(grepl("T", comp1_wide_red$flume), 1, 0),
y = as.matrix(comp1_wide_red[,-c(1,2)])
)
stan_dat_comp2 = list(
n_flumes = nrow(comp2_wide_red),
n_time = ncol(comp2_wide_red) - 2,
times = as.integer(colnames(comp2_wide_red)[-c(1,2)]),
treatment = ifelse(grepl("T", comp2_wide_red$flume), 1, 0),
y = as.matrix(comp2_wide_red[,-c(1,2)])
)
# latent variable model -> more correct than AR1
# some fitting complications required a bit of tuning, hence diagnostic plots and changing
# adapt_delta
### in the end the simple version (next two lines) of the model ran better then the tow verisons below!
fit_gp1 = stan("code/ar1_gp_comp1.stan", data = stan_dat_comp1, iter=10000, control=list(adapt_delta = 0.95)) #adapt delta= high -> model slow but more detialed; low -> model fast but less detialed!
fit_gp2 = stan("code/ar1_gp_comp1.stan", data = stan_dat_comp2, iter=10000, control=list(adapt_delta = 0.95))
# ESS problmes might be due to too low iter! OR increase adapt delta!
# Problem might be the model itselfe
# numerical solution might be to use scale() on the comp1 data -> does scale and center, which is good in this case! scale data when in tall format!
# fit_gp1 = stan("code/ar1_gp_comp1.stan", data = stan_dat_comp1, iter=10000, control=list(adapt_delta = 0.95, max_treedepth = 15)) #this takes ages, but give me no warnings
# fit_gp2 = stan("code/ar1_gp_comp1.stan", data = stan_dat_comp2, iter=10000, control=list(adapt_delta = 0.95, max_treedepth = 15)) #this takes ages, but give me no warnings
parnames = c("rho", "a_gp", "sigma", "alpha", "beta")
samps = as.array(fit_gp1, pars = parnames)
mcmc_trace(samps)
mcmc_dens_overlay(samps)
s1 = rstan::extract(fit_gp1, c("alpha", "beta"))
median(s1$alpha)
quantile(s1$alpha, c(0.05, 0.95))
median(s1$beta)
quantile(s1$beta, c(0.05, 0.95))
params = as.matrix(fit_gp1, pars = c('alpha', 'beta'))
plotting = data.frame(type = c('treatment', 'control'))
params[,2] = params[,1] + params[,2]
plotting = data.frame(type = c('control', 'treatment'), median = apply(params, 2, median), lower = apply(params, 2, quantile, 0.05), upper = apply(params, 2, quantile, 0.95))
plot(1:2, plotting$median,  xlim=c(0,3), xaxt='n', xlab='', bty='n', ylab="Comp 1", pch=c(21,21), bg=c("grey80", "grey20"), cex=1.5)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('Control', 'Treatment'))
x11(width = 15, height = 10)
# create layout for 3 plots in one window
layout(matrix(c(1,3,2,3), nrow = 2, ncol = 2, byrow = TRUE))
# make singel df's for contr and treat -> makes plotting with vioplot easier
comp1_tall_c <- comp1_tall[1:28,]
comp1_tall_t <- comp1_tall[29:56,]
# 1st plot
par(mar=c(5,8,2,1)) # sets the bottom, left, top and right margins
vioplot(comp1_tall_t$value ~ comp1_tall_t$time, pchMed=19, col=rep(c("gray20"), 6), at=c(1:6), ylim=c(min(comp1_tall$value),max(comp1_tall$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Treatment", side=2, line=4, cex=2)
mtext(side=2, at=max(comp1_tall$value)*1.01, "(a)", cex=2, las=1, adj=3)
# 2nd plot
par(mar=c(6,8,2,1)) # sets the bottom, left, top and right margins
vioplot(comp1_tall_c$value ~ comp1_tall_c$time, pchMed=19, col=rep(c("gray80"), 6), ylim=c(min(comp1_tall$value),max(comp1_tall$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Control", side=2, line=4, cex=2)
mtext(side=2, at=max(comp1_tall$value)*1.01, "(b)", cex=2, las=1, adj=3)
mtext("Time (h)", side=1, line=4, cex=2)
# 3rd plot
par(mar=c(5,8,3,1))
plot(1:2, plotting$median, xlim=c(0,3), ylim=c(-0.2,max(plotting$upper)), xaxt='n', yaxt='n', xlab='', bty='n', ylab="", pch=c(21,21), bg=c("grey80", "grey20"), cex=2)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('', ''), cex=2, cex.lab=2, cex.axis=2)
axis(2, line=-5, cex=2, cex.lab=2, cex.axis=2)
mtext("Component 1", side=2, line=1, cex=2)
mtext(c("Control", "Treatment"), at=c(1,2), side=1, line=2.5, cex=2)
mtext(side=2, at=max(plotting$upper)*1.05, "(c)", cex=2, las=1, adj=1)
x11(width = 15, height = 10)
# create layout for 3 plots in one window
layout(matrix(c(1,3,2,3), nrow = 2, ncol = 2, byrow = TRUE))
# make singel df's for contr and treat -> makes plotting with vioplot easier
comp1_tall_c <- comp1_tall[1:28,]
comp1_tall_t <- comp1_tall[29:56,]
# 1st plot
par(mar=c(5,8,2,1)) # sets the bottom, left, top and right margins
vioplot(comp1_tall_c$value ~ comp1_tall_c$time, pchMed=19, col=rep(c("gray80"), 6), ylim=c(min(comp1_tall$value),max(comp1_tall$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Control", side=2, line=4, cex=2)
mtext(side=2, at=max(comp1_tall$value)*1.01, "(b)", cex=2, las=1, adj=3)
# 2nd plot
par(mar=c(6,8,2,1)) # sets the bottom, left, top and right margins
vioplot(comp1_tall_t$value ~ comp1_tall_t$time, pchMed=19, col=rep(c("gray20"), 6), at=c(1:6), ylim=c(min(comp1_tall$value),max(comp1_tall$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Treatment", side=2, line=4, cex=2)
mtext(side=2, at=max(comp1_tall$value)*1.01, "(a)", cex=2, las=1, adj=3)
mtext("Time (h)", side=1, line=4, cex=2)
# 3rd plot
par(mar=c(5,8,3,1))
plot(1:2, plotting$median, xlim=c(0,3), ylim=c(-0.2,max(plotting$upper)), xaxt='n', yaxt='n', xlab='', bty='n', ylab="", pch=c(21,21), bg=c("grey80", "grey20"), cex=2)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('', ''), cex=2, cex.lab=2, cex.axis=2)
axis(2, line=-5, cex=2, cex.lab=2, cex.axis=2)
mtext("Component 1", side=2, line=1, cex=2)
mtext(c("Control", "Treatment"), at=c(1,2), side=1, line=2.5, cex=2)
mtext(side=2, at=max(plotting$upper)*1.05, "(c)", cex=2, las=1, adj=1)
params = as.matrix(fit_gp2, pars = c('alpha', 'beta'))
plotting = data.frame(type = c('treatment', 'control'))
params[,2] = params[,1] + params[,2]
plotting = data.frame(type = c('control', 'treatment'), median = apply(params, 2, median), lower = apply(params, 2, quantile, 0.05), upper = apply(params, 2, quantile, 0.95))
plot(1:2, plotting$median,  xlim=c(0,3), xaxt='n', xlab='', bty='n', ylab="Comp 2", pch=c(21,21), bg=c("grey80", "grey20"), cex=1.5)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('Control', 'Treatment'))
x11(width = 15, height = 10)
# create layout for 3 plots in one window
layout(matrix(c(1,3,2,3), nrow = 2, ncol = 2, byrow = TRUE))
# make singel df's for contr and treat -> makes plotting with vioplot easier
comp2_tall_c <- comp2_tall[1:28,]
comp2_tall_t <- comp2_tall[29:56,]
# 1st plot
par(mar=c(5,8,2,1)) # sets the bottom, left, top and right margins
vioplot(comp2_tall_c$value ~ comp2_tall_c$time, pchMed=19, col=rep(c("gray80"), 6), ylim=c(min(comp2_tall$value),max(comp2_tall$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Control", side=2, line=4, cex=2)
mtext(side=2, at=max(comp2_tall$value)*1.01, "(a)", cex=2, las=1, adj=3)
# 2nd plot
par(mar=c(6,8,2,1)) # sets the bottom, left, top and right margins
vioplot(comp2_tall_t$value ~ comp2_tall_t$time, pchMed=19, col=rep(c("gray20"), 6), at=c(1:6), ylim=c(min(comp2_tall$value),max(comp2_tall$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Treatment", side=2, line=4, cex=2)
mtext(side=2, at=max(comp2_tall$value)*1.01, "(b)", cex=2, las=1, adj=3)
mtext("Time (h)", side=1, line=4, cex=2)
# 3rd plot
par(mar=c(5,8,3,1))
plot(1:2, plotting$median, xlim=c(0,3), ylim=c(-0.8,max(plotting$upper)), xaxt='n', yaxt='n', xlab='', bty='n', ylab="", pch=c(21,21), bg=c("grey80", "grey20"), cex=2)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('', ''), cex=2, cex.lab=2, cex.axis=2)
axis(2, line=-5, cex=2, cex.lab=2, cex.axis=2)
mtext("Component 2", side=2, line=1, cex=2)
mtext(c("Control", "Treatment"), at=c(1,2), side=1, line=2.5, cex=2)
mtext(side=2, at=max(plotting$upper)*1.05, "(c)", cex=2, las=1, adj=1)
params = as.matrix(fit_gp1, pars = c('alpha', 'beta'))
plotting = data.frame(type = c('treatment', 'control'))
params[,2] = params[,1] + params[,2]
plotting = data.frame(type = c('control', 'treatment'), median = apply(params, 2, median), lower = apply(params, 2, quantile, 0.05), upper = apply(params, 2, quantile, 0.95))
plot(1:2, plotting$median,  xlim=c(0,3), xaxt='n', xlab='', bty='n', ylab="Comp 1", pch=c(21,21), bg=c("grey80", "grey20"), cex=1.5)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('Control', 'Treatment'))
x11(width = 15, height = 10)
# create layout for 3 plots in one window
layout(matrix(c(1,3,2,3), nrow = 2, ncol = 2, byrow = TRUE))
# make singel df's for contr and treat -> makes plotting with vioplot easier
comp1_tall_c <- comp1_tall[1:28,]
comp1_tall_t <- comp1_tall[29:56,]
# 1st plot
par(mar=c(5,8,2,1)) # sets the bottom, left, top and right margins
vioplot(comp1_tall_c$value ~ comp1_tall_c$time, pchMed=19, col=rep(c("gray80"), 6), ylim=c(min(comp1_tall$value),max(comp1_tall$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Control", side=2, line=4, cex=2)
mtext(side=2, at=max(comp1_tall$value)*1.01, "(a)", cex=2, las=1, adj=3)
# 2nd plot
par(mar=c(6,8,2,1)) # sets the bottom, left, top and right margins
vioplot(comp1_tall_t$value ~ comp1_tall_t$time, pchMed=19, col=rep(c("gray20"), 6), at=c(1:6), ylim=c(min(comp1_tall$value),max(comp1_tall$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Treatment", side=2, line=4, cex=2)
mtext(side=2, at=max(comp1_tall$value)*1.01, "(b)", cex=2, las=1, adj=3)
mtext("Time (h)", side=1, line=4, cex=2)
# 3rd plot
par(mar=c(5,8,3,1))
plot(1:2, plotting$median, xlim=c(0,3), ylim=c(-0.2,max(plotting$upper)), xaxt='n', yaxt='n', xlab='', bty='n', ylab="", pch=c(21,21), bg=c("grey80", "grey20"), cex=2)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('', ''), cex=2, cex.lab=2, cex.axis=2)
axis(2, line=-5, cex=2, cex.lab=2, cex.axis=2)
mtext("Component 1", side=2, line=1, cex=2)
mtext(c("Control", "Treatment"), at=c(1,2), side=1, line=2.5, cex=2)
mtext(side=2, at=max(plotting$upper)*1.05, "(c)", cex=2, las=1, adj=1)
library(data.table)
library(tidyr)
library(rstan)
library(bayesplot)
library(vioplot)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
setwd("C:/Users/thuile/PhD/GitHub/LimnicFires")
dom_dat = fread("data/DOM.txt")
doc_dat = fread("data/DOC_molten.txt")
## drop unneeded row numbers
dom_dat[["V1"]] = NULL
doc_dat[["V1"]] = NULL
# flume names should be unique
doc_dat[, flume := factor(paste(flume, treat, sep="_"))]
doc_wide = as(pivot_wider(doc_dat, id_cols=c("flume", "time"), names_from="time"), "data.table")
stan_dat = list(
n_flumes = nrow(doc_wide),
n_time = ncol(doc_wide) - 1,
times = as.integer(colnames(doc_wide)[-1]),
treatment = ifelse(grepl("T", doc_wide$flume), 1, 0),
y = as.matrix(doc_wide[,-1])
)
# fit = stan("code/ar1_simple.stan", data = stan_dat, iter=5000)
# mcmc_dens_overlay(as.array(fit))
# compare with a latent variable model, which is a bit more correct
# some fitting complications required a bit of tuning, hence diagnostic plots and changing
# adapt_delta
fit_gp = stan("code/ar1_gp.stan", data = stan_dat, iter=10000, control=list(adapt_delta = 0.95))
parnames = c("rho", "a_gp", "sigma", "alpha", "beta")
samps = as.array(fit_gp, pars = parnames)
# mcmc_trace(samps)
# mcmc_dens_overlay(samps)
s2 = rstan::extract(fit_gp, c("alpha", "beta"))
# get mean DOC for contr and treat as well as effect size
dat = as.matrix(fit_gp, pars = c('alpha', 'beta'))
dat1 = data.frame(type = c('treatment', 'control'))
dat[,2] = dat[,1] + dat[,2]
dat_all = data.frame(type = c('control', 'treatment'), median = apply(dat, 2, median), lower = apply(dat, 2, quantile, 0.05), upper = apply(dat, 2, quantile, 0.95))
dat_all
ci_disp = function(x, digits = 3, lower = 0.05, upper = 0.95) {
paste0(round(median(x), digits), " (",
round(quantile(x, lower), digits), ", ",
round(quantile(x, upper), digits), ")"
)
}
# compare fit and fit_gp
matrix(c(sapply(s1, ci_disp, digits = 3), sapply(s2, ci_disp, digits = 3)), nrow = 2,
dimnames = list(c("alpha", "beta"), c("AR1", "GP")))
# show results from fit_gp only
matrix(sapply(s2, ci_disp, digits = 3), nrow = 2,
dimnames = list(c("alpha", "beta"), "GP")) # the beta here is the average effect size!
# but should that not be equal to this?:
dat_all$median[2]-dat_all$median[1]
# scatterplot of measured DOC
par(mar=c(5,5,2,2))
plot(as.character(doc_dat$time[doc_dat$treat=="C"]), doc_dat$value[doc_dat$treat=="C"], type="p", ylim=c(2.5,7), pch=21, bg="grey80", cex=2, xlab="Time (h)", ylab= "DOC (mg/l)", cex.lab=2, cex.axis=2)
points(as.character(doc_dat$time[doc_dat$treat=="T"]), doc_dat$value[doc_dat$treat=="T"], type="p", ylim=c(2,7), pch=21, bg="grey20", cex=2)
params = as.matrix(fit_gp, pars = c('alpha', 'beta'))
plotting = data.frame(type = c('treatment', 'control'))
params[,2] = params[,1] + params[,2]
plotting = data.frame(type = c('control', 'treatment'), median = apply(params, 2, median), lower = apply(params, 2, quantile, 0.05), upper = apply(params, 2, quantile, 0.95))
plot(1:2, plotting$median, ylim=c(3,4), xlim=c(0,3), xaxt='n', xlab='', bty='n', ylab="DOC (mg/l)", pch=c(21,21), bg=c("grey80", "grey20"), cex=1.5)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('Control', 'Treatment'))
x11(width = 15, height = 10)
# create layout for 3 plots in one window
layout(matrix(c(1,2,1,3), nrow = 2, ncol = 2, byrow = TRUE))
# 1st plot
par(mar=c(4,4,3,1))
plot(1:2, plotting$median, ylim=c(3,4), xlim=c(0,3), xaxt='n', yaxt='n', xlab="", bty='n', ylab="", pch=c(21,21), bg=c("grey80", "grey20"), cex=2, cex.lab=2, cex.axis=2)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('', ''), cex=2, cex.lab=2, cex.axis=2)
axis(2, line=-5, cex=2, cex.lab=2, cex.axis=2)
mtext(expression(DOC~(mg~l^-1)), side=2, line=1, cex=2)
mtext(c("Control", "Treatment"), at=c(1,2), side=1, line=2.5, cex=2)
mtext(side=2, at=max(plotting$upper)*1.03, "(a)", cex=2, las=1, adj=1)
# make singel df's for contr and treat -> makes plotting with vioplot easier
doc_tall_c <- doc_dat[which(doc_dat$treat=="C")]
doc_tall_t <- doc_dat[which(doc_dat$treat=="T")]
# 2nd plot
par(mar=c(3,1,0.5,1)) # sets the bottom, left, top and right margins
vioplot(doc_tall_t$value ~ doc_tall_t$time, pchMed=19, col=rep(c("gray20"), 6), ylim=c(min(doc_dat$value), max(doc_dat$value)), xlab="", ylab="", cex=2, cex.axis=2)
mtext("Treatment", side=2, line=4, cex=2)
mtext(side=2, at=max(doc_dat$value)*1.01, "(b)", cex=2, las=1, adj=3)
# 3rd plot
par(mar=c(6,1,0.5,1))
vioplot(doc_tall_c$value ~ doc_tall_c$time, pchMed=19, col=rep(c("gray80"), 6), ylim=c(min(doc_dat$value), max(doc_dat$value)), xlab="", ylab="", cex=2, cex.axis=2)
mtext("Control", side=2, line=4, cex=2)
mtext("Time (h)", side=1, line=4, cex=2)
mtext(side=2, at=max(doc_dat$value)*1.01, "(c)", cex=2, las=1, adj=3)
x11(width = 15, height = 10)
# create layout for 3 plots in one window
layout(matrix(c(1,3,2,3), nrow = 2, ncol = 2, byrow = TRUE))
# make singel df's for contr and treat -> makes plotting with vioplot easier
doc_tall_c <- doc_tall[1:28,]
doc_tall_t <- doc_tall[29:56,]
# 1st plot
par(mar=c(5,8,2,1)) # sets the bottom, left, top and right margins
vioplot(doc_tall_c$value ~ doc_tall_c$time, pchMed=19, col=rep(c("gray80"), 6), ylim=c(min(doc_tall$value),max(doc_tall$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Control", side=2, line=4, cex=2)
mtext(side=2, at=max(doc_tall$value)*1.01, "(a)", cex=2, las=1, adj=3)
# 2nd plot
par(mar=c(6,8,2,1)) # sets the bottom, left, top and right margins
vioplot(doc_tall_t$value ~ doc_tall_t$time, pchMed=19, col=rep(c("gray20"), 6), at=c(1:6), ylim=c(min(doc_tall$value),max(doc_tall$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Treatment", side=2, line=4, cex=2)
mtext(side=2, at=max(doc_tall$value)*1.01, "(b)", cex=2, las=1, adj=3)
mtext("Time (h)", side=1, line=4, cex=2)
# 3rd plot
par(mar=c(5,8,3,1))
plot(1:2, plotting$median, xlim=c(0,3), ylim=c(3.2,max(plotting$upper)), xaxt='n', yaxt='n', xlab='', bty='n', ylab="", pch=c(21,21), bg=c("grey80", "grey20"), cex=2)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('', ''), cex=2, cex.lab=2, cex.axis=2)
axis(2, line=-5, cex=2, cex.lab=2, cex.axis=2)
mtext("doc 254", side=2, line=1, cex=2)
mtext(c("Control", "Treatment"), at=c(1,2), side=1, line=2.5, cex=2)
mtext(side=2, at=max(plotting$upper)*1.001, "(c)", cex=2, las=1, adj=1)
x11(width = 15, height = 10)
# create layout for 3 plots in one window
layout(matrix(c(1,3,2,3), nrow = 2, ncol = 2, byrow = TRUE))
# 1st plot
par(mar=c(5,8,2,1)) # sets the bottom, left, top and right margins
vioplot(doc_c$value ~ doc_c$time, pchMed=19, col=rep(c("gray80"), 6), ylim=c(min(doc$value),max(doc$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Control", side=2, line=4, cex=2)
mtext(side=2, at=max(doc$value)*1.01, "(a)", cex=2, las=1, adj=3)
# 2nd plot
par(mar=c(6,8,2,1)) # sets the bottom, left, top and right margins
vioplot(doc_t$value ~ doc_t$time, pchMed=19, col=rep(c("gray20"), 6), at=c(1:6), ylim=c(min(doc$value),max(doc$value)), xlab="", ylab="", cex=2, cex.axis=2, cex.lab=2)
mtext("Treatment", side=2, line=4, cex=2)
mtext(side=2, at=max(doc$value)*1.01, "(b)", cex=2, las=1, adj=3)
mtext("Time (h)", side=1, line=4, cex=2)
# 3rd plot
par(mar=c(5,8,3,1))
plot(1:2, plotting$median, xlim=c(0,3), ylim=c(3.2,max(plotting$upper)), xaxt='n', yaxt='n', xlab='', bty='n', ylab="", pch=c(21,21), bg=c("grey80", "grey20"), cex=2)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('', ''), cex=2, cex.lab=2, cex.axis=2)
axis(2, line=-5, cex=2, cex.lab=2, cex.axis=2)
mtext("", side=2, line=1, cex=2)
mtext(c("Control", "Treatment"), at=c(1,2), side=1, line=2.5, cex=2)
mtext(side=2, at=max(plotting$upper)*1.001, "(c)", cex=2, las=1, adj=1)
x11(width = 15, height = 10)
# create layout for 3 plots in one window
layout(matrix(c(1,2,1,3), nrow = 2, ncol = 2, byrow = TRUE))
# 1st plot
par(mar=c(4,4,3,1))
plot(1:2, plotting$median, ylim=c(3,4), xlim=c(0,3), xaxt='n', yaxt='n', xlab="", bty='n', ylab="", pch=c(21,21), bg=c("grey80", "grey20"), cex=2, cex.lab=2, cex.axis=2)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('', ''), cex=2, cex.lab=2, cex.axis=2)
axis(2, line=-5, cex=2, cex.lab=2, cex.axis=2)
mtext(expression(DOC~(mg~l^-1)), side=2, line=1, cex=2)
mtext(c("Control", "Treatment"), at=c(1,2), side=1, line=2.5, cex=2)
mtext(side=2, at=max(plotting$upper)*1.03, "(a)", cex=2, las=1, adj=1)
# make singel df's for contr and treat -> makes plotting with vioplot easier
doc_tall_c <- doc_dat[which(doc_dat$treat=="C")]
doc_tall_t <- doc_dat[which(doc_dat$treat=="T")]
# 2nd plot
par(mar=c(3,1,0.5,1)) # sets the bottom, left, top and right margins
vioplot(doc_tall_t$value ~ doc_tall_t$time, pchMed=19, col=rep(c("gray20"), 6), ylim=c(min(doc_dat$value), max(doc_dat$value)), xlab="", ylab="", cex=2, cex.axis=2)
mtext("Treatment", side=2, line=4, cex=2)
mtext(side=2, at=max(doc_dat$value)*1.01, "(b)", cex=2, las=1, adj=3)
# 3rd plot
par(mar=c(6,1,0.5,1))
vioplot(doc_tall_c$value ~ doc_tall_c$time, pchMed=19, col=rep(c("gray80"), 6), ylim=c(min(doc_dat$value), max(doc_dat$value)), xlab="", ylab="", cex=2, cex.axis=2)
mtext("Control", side=2, line=4, cex=2)
mtext("Time (h)", side=1, line=4, cex=2)
mtext(side=2, at=max(doc_dat$value)*1.01, "(c)", cex=2, las=1, adj=3)
x11(width = 15, height = 10)
# create layout for 3 plots in one window
layout(matrix(c(1,3,2,3), nrow = 2, ncol = 2, byrow = TRUE))
# make singel df's for contr and treat -> makes plotting with vioplot easier
doc_tall_c <- doc_dat[which(doc_dat$treat=="C")]
doc_tall_t <- doc_dat[which(doc_dat$treat=="T")]
# 1st plot
par(mar=c(6,1,0.5,1))
vioplot(doc_tall_c$value ~ doc_tall_c$time, pchMed=19, col=rep(c("gray80"), 6), ylim=c(min(doc_dat$value), max(doc_dat$value)), xlab="", ylab="", cex=2, cex.axis=2)
mtext("Control", side=2, line=4, cex=2)
mtext("Time (h)", side=1, line=4, cex=2)
mtext(side=2, at=max(doc_dat$value)*1.01, "(c)", cex=2, las=1, adj=3)
# 2nd plot
par(mar=c(3,1,0.5,1)) # sets the bottom, left, top and right margins
vioplot(doc_tall_t$value ~ doc_tall_t$time, pchMed=19, col=rep(c("gray20"), 6), ylim=c(min(doc_dat$value), max(doc_dat$value)), xlab="", ylab="", cex=2, cex.axis=2)
mtext("Treatment", side=2, line=4, cex=2)
mtext(side=2, at=max(doc_dat$value)*1.01, "(b)", cex=2, las=1, adj=3)
# 3rd plot
par(mar=c(4,4,3,1))
plot(1:2, plotting$median, ylim=c(3,4), xlim=c(0,3), xaxt='n', yaxt='n', xlab="", bty='n', ylab="", pch=c(21,21), bg=c("grey80", "grey20"), cex=2, cex.lab=2, cex.axis=2)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('', ''), cex=2, cex.lab=2, cex.axis=2)
axis(2, line=-5, cex=2, cex.lab=2, cex.axis=2)
mtext(expression(DOC~(mg~l^-1)), side=2, line=1, cex=2)
mtext(c("Control", "Treatment"), at=c(1,2), side=1, line=2.5, cex=2)
mtext(side=2, at=max(plotting$upper)*1.03, "(a)", cex=2, las=1, adj=1)
x11(width = 15, height = 10)
# create layout for 3 plots in one window
layout(matrix(c(1,3,2,3), nrow = 2, ncol = 2, byrow = TRUE))
# make singel df's for contr and treat -> makes plotting with vioplot easier
doc_tall_c <- doc_dat[which(doc_dat$treat=="C")]
doc_tall_t <- doc_dat[which(doc_dat$treat=="T")]
# 1st plot
par(mar=c(5,8,2,1))
vioplot(doc_tall_c$value ~ doc_tall_c$time, pchMed=19, col=rep(c("gray80"), 6), ylim=c(min(doc_dat$value), max(doc_dat$value)), xlab="", ylab="", cex=2, cex.axis=2)
mtext("Control", side=2, line=4, cex=2)
mtext("Time (h)", side=1, line=4, cex=2)
mtext(side=2, at=max(doc_dat$value)*1.01, "(a)", cex=2, las=1, adj=3)
# 2nd plot
par(mar=c(6,8,2,1)) # sets the bottom, left, top and right margins
vioplot(doc_tall_t$value ~ doc_tall_t$time, pchMed=19, col=rep(c("gray20"), 6), ylim=c(min(doc_dat$value), max(doc_dat$value)), xlab="", ylab="", cex=2, cex.axis=2)
mtext("Treatment", side=2, line=4, cex=2)
mtext(side=2, at=max(doc_dat$value)*1.01, "(b)", cex=2, las=1, adj=3)
# 3rd plot
par(mar=c(5,8,3,1))
plot(1:2, plotting$median, ylim=c(3,4), xlim=c(0,3), xaxt='n', yaxt='n', xlab="", bty='n', ylab="", pch=c(21,21), bg=c("grey80", "grey20"), cex=2, cex.lab=2, cex.axis=2)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('', ''), cex=2, cex.lab=2, cex.axis=2)
axis(2, line=-5, cex=2, cex.lab=2, cex.axis=2)
mtext(expression(DOC~(mg~l^-1)), side=2, line=1, cex=2)
mtext(c("Control", "Treatment"), at=c(1,2), side=1, line=2.5, cex=2)
mtext(side=2, at=max(plotting$upper)*1.03, "(c)", cex=2, las=1, adj=1)
x11(width = 15, height = 10)
# create layout for 3 plots in one window
layout(matrix(c(1,3,2,3), nrow = 2, ncol = 2, byrow = TRUE))
# make singel df's for contr and treat -> makes plotting with vioplot easier
doc_tall_c <- doc_dat[which(doc_dat$treat=="C")]
doc_tall_t <- doc_dat[which(doc_dat$treat=="T")]
# 1st plot
par(mar=c(5,8,2,1))
vioplot(doc_tall_c$value ~ doc_tall_c$time, pchMed=19, col=rep(c("gray80"), 6), ylim=c(min(doc_dat$value), max(doc_dat$value)), xlab="", ylab="", cex=2, cex.axis=2)
mtext("Control", side=2, line=4, cex=2)
mtext("Time (h)", side=1, line=4, cex=2)
mtext(side=2, at=max(doc_dat$value)*1.01, "(a)", cex=2, las=1, adj=3)
# 2nd plot
par(mar=c(6,8,2,1)) # sets the bottom, left, top and right margins
vioplot(doc_tall_t$value ~ doc_tall_t$time, pchMed=19, col=rep(c("gray20"), 6), ylim=c(min(doc_dat$value), max(doc_dat$value)), xlab="", ylab="", cex=2, cex.axis=2)
mtext("Treatment", side=2, line=4, cex=2)
mtext(side=2, at=max(doc_dat$value)*1.01, "(b)", cex=2, las=1, adj=3)
# 3rd plot
par(mar=c(5,8,3,1))
plot(1:2, plotting$median, ylim=c(3,4), xlim=c(0,3), xaxt='n', yaxt='n', xlab="", bty='n', ylab="", pch=c(21,21), bg=c("grey80", "grey20"), cex=2, cex.lab=2, cex.axis=2)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('', ''), cex=2, cex.lab=2, cex.axis=2)
axis(2, line=-5, cex=2, cex.lab=2, cex.axis=2)
mtext(expression(DOC~(mg~l^-1)), side=2, line=1, cex=2)
mtext(c("Control", "Treatment"), at=c(1,2), side=1, line=2.5, cex=2)
mtext(side=2, at=max(plotting$upper)*1.01, "(c)", cex=2, las=1, adj=1)
x11(width = 15, height = 10)
# create layout for 3 plots in one window
layout(matrix(c(1,3,2,3), nrow = 2, ncol = 2, byrow = TRUE))
# make singel df's for contr and treat -> makes plotting with vioplot easier
doc_tall_c <- doc_dat[which(doc_dat$treat=="C")]
doc_tall_t <- doc_dat[which(doc_dat$treat=="T")]
# 1st plot
par(mar=c(5,8,2,1))
vioplot(doc_tall_c$value ~ doc_tall_c$time, pchMed=19, col=rep(c("gray80"), 6), ylim=c(min(doc_dat$value), max(doc_dat$value)), xlab="", ylab="", cex=2, cex.axis=2)
mtext("Control", side=2, line=4, cex=2)
mtext(side=2, at=max(doc_dat$value)*1.01, "(a)", cex=2, las=1, adj=3)
# 2nd plot
par(mar=c(6,8,2,1)) # sets the bottom, left, top and right margins
vioplot(doc_tall_t$value ~ doc_tall_t$time, pchMed=19, col=rep(c("gray20"), 6), ylim=c(min(doc_dat$value), max(doc_dat$value)), xlab="", ylab="", cex=2, cex.axis=2)
mtext("Treatment", side=2, line=4, cex=2)
mtext(side=2, at=max(doc_dat$value)*1.01, "(b)", cex=2, las=1, adj=3)
mtext("Time (h)", side=1, line=4, cex=2)
# 3rd plot
par(mar=c(5,8,3,1))
plot(1:2, plotting$median, ylim=c(3,4), xlim=c(0,3), xaxt='n', yaxt='n', xlab="", bty='n', ylab="", pch=c(21,21), bg=c("grey80", "grey20"), cex=2, cex.lab=2, cex.axis=2)
segments(c(1,2), plotting$lower, y1 = plotting$upper)
axis(1, at=c(1,2), labels=c('', ''), cex=2, cex.lab=2, cex.axis=2)
axis(2, line=-5, cex=2, cex.lab=2, cex.axis=2)
mtext(expression(DOC~(mg~l^-1)), side=2, line=1, cex=2)
mtext(c("Control", "Treatment"), at=c(1,2), side=1, line=2.5, cex=2)
mtext(side=2, at=max(plotting$upper)*1.01, "(c)", cex=2, las=1, adj=1)
